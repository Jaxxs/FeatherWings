/**
 * \file
 * \brief File for the Proteus-III board of the WE IoT design kit.
 *
 * \copyright (c) 2022 Würth Elektronik eiSos GmbH & Co. KG
 *
 * \page License
 *
 * THE SOFTWARE INCLUDING THE SOURCE CODE IS PROVIDED “AS IS”. YOU ACKNOWLEDGE
 * THAT WÜRTH ELEKTRONIK EISOS MAKES NO REPRESENTATIONS AND WARRANTIES OF ANY
 * KIND RELATED TO, BUT NOT LIMITED TO THE NON-INFRINGEMENT OF THIRD PARTIES’
 * INTELLECTUAL PROPERTY RIGHTS OR THE MERCHANTABILITY OR FITNESS FOR YOUR
 * INTENDED PURPOSE OR USAGE. WÜRTH ELEKTRONIK EISOS DOES NOT WARRANT OR
 * REPRESENT THAT ANY LICENSE, EITHER EXPRESS OR IMPLIED, IS GRANTED UNDER ANY
 * PATENT RIGHT, COPYRIGHT, MASK WORK RIGHT, OR OTHER INTELLECTUAL PROPERTY
 * RIGHT RELATING TO ANY COMBINATION, MACHINE, OR PROCESS IN WHICH THE PRODUCT
 * IS USED. INFORMATION PUBLISHED BY WÜRTH ELEKTRONIK EISOS REGARDING
 * THIRD-PARTY PRODUCTS OR SERVICES DOES NOT CONSTITUTE A LICENSE FROM WÜRTH
 * ELEKTRONIK EISOS TO USE SUCH PRODUCTS OR SERVICES OR A WARRANTY OR
 * ENDORSEMENT THEREOF
 *
 * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
 * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
 * IN THE ROOT DIRECTORY OF THIS PACKAGE
 */
#ifndef PROTEUSIIIBOARD_H
#define PROTEUSIIIBOARD_H

/**         Includes         */
#include "ConfigPlatform.h"

/**         Functions definition         */

#define TIMEOUT 500
#define NAME_LEN 16
#ifdef __cplusplus
extern "C" {
#endif

#define CMD_WAIT_TIME 500
#define CNFINVALID 255

#define PROTEUSIII_MAX_PAYLOAD_LENGTH (uint16_t)964

#define LENGTH_CMD_OVERHEAD (uint16_t)5
#define LENGTH_CMD_OVERHEAD_WITHOUT_CRC (uint16_t)(LENGTH_CMD_OVERHEAD - 1)
#define MAX_CMD_LENGTH \
    (uint16_t)(PROTEUSIII_MAX_PAYLOAD_LENGTH + LENGTH_CMD_OVERHEAD)

/* Largest expected packet is CMD_DATA_IND containing max. possible
 * payload + BTMAC (6 bytes) + RSSI (1 byte) */
#define MAX_RX_PACKET_LENGTH (MAX_CMD_LENGTH + 7)

#define CMD_POSITION_STX (uint8_t)0
#define CMD_POSITION_CMD (uint8_t)1
#define CMD_POSITION_LENGTH_LSB (uint8_t)2
#define CMD_POSITION_LENGTH_MSB (uint8_t)3
#define CMD_POSITION_DATA (uint8_t)4

#define CMD_STX 0x02

#define PROTEUSIII_CMD_TYPE_REQ (uint8_t)(0 << 6)
#define PROTEUSIII_CMD_TYPE_CNF (uint8_t)(1 << 6)
#define PROTEUSIII_CMD_TYPE_IND (uint8_t)(2 << 6)
#define PROTEUSIII_CMD_TYPE_RSP (uint8_t)(3 << 6)

#define PROTEUSIII_CMD_RESET (uint8_t)0x00
#define PROTEUSIII_CMD_RESET_REQ \
    (PROTEUSIII_CMD_RESET | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_RESET_CNF \
    (PROTEUSIII_CMD_RESET | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_GETSTATE (uint8_t)0x01
#define PROTEUSIII_CMD_GETSTATE_REQ \
    (PROTEUSIII_CMD_GETSTATE | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GETSTATE_CNF \
    (PROTEUSIII_CMD_GETSTATE | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_GETSTATE_IND \
    (PROTEUSIII_CMD_GETSTATE | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_SLEEP (uint8_t)0x02
#define PROTEUSIII_CMD_SLEEP_REQ \
    (PROTEUSIII_CMD_SLEEP | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_SLEEP_CNF \
    (PROTEUSIII_CMD_SLEEP | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_SLEEP_IND \
    (PROTEUSIII_CMD_SLEEP | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_UART_DISABLE (uint8_t)0x1B
#define PROTEUSIII_CMD_UART_DISABLE_REQ \
    (PROTEUSIII_CMD_UART_DISABLE | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_UART_DISABLE_CNF \
    (PROTEUSIII_CMD_UART_DISABLE | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_UART_ENABLE_IND (uint8_t)0x9B

#define PROTEUSIII_CMD_DATA (uint8_t)0x04
#define PROTEUSIII_CMD_DATA_REQ (PROTEUSIII_CMD_DATA | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_DATA_CNF (PROTEUSIII_CMD_DATA | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_DATA_IND (PROTEUSIII_CMD_DATA | PROTEUSIII_CMD_TYPE_IND)
#define PROTEUSIII_CMD_TXCOMPLETE_RSP \
    (PROTEUSIII_CMD_DATA | PROTEUSIII_CMD_TYPE_RSP)

#define PROTEUSIII_CMD_CONNECT (uint8_t)0x06
#define PROTEUSIII_CMD_CONNECT_REQ \
    (PROTEUSIII_CMD_CONNECT | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_CONNECT_CNF \
    (PROTEUSIII_CMD_CONNECT | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_CONNECT_IND \
    (PROTEUSIII_CMD_CONNECT | PROTEUSIII_CMD_TYPE_IND)
#define PROTEUSIII_CMD_CHANNELOPEN_RSP \
    (PROTEUSIII_CMD_CONNECT | PROTEUSIII_CMD_TYPE_RSP)

#define PROTEUSIII_CMD_DISCONNECT (uint8_t)0x07
#define PROTEUSIII_CMD_DISCONNECT_REQ \
    (PROTEUSIII_CMD_DISCONNECT | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_DISCONNECT_CNF \
    (PROTEUSIII_CMD_DISCONNECT | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_DISCONNECT_IND \
    (PROTEUSIII_CMD_DISCONNECT | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_SECURITY_IND (uint8_t)0x88

#define PROTEUSIII_CMD_SCANSTART (uint8_t)0x09
#define PROTEUSIII_CMD_SCANSTART_REQ \
    (PROTEUSIII_CMD_SCANSTART | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_SCANSTART_CNF \
    (PROTEUSIII_CMD_SCANSTART | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_SCANSTART_IND \
    (PROTEUSIII_CMD_SCANSTART | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_SCANSTOP (uint8_t)0x0A
#define PROTEUSIII_CMD_SCANSTOP_REQ \
    (PROTEUSIII_CMD_SCANSTOP | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_SCANSTOP_CNF \
    (PROTEUSIII_CMD_SCANSTOP | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_SCANSTOP_IND \
    (PROTEUSIII_CMD_SCANSTOP | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_GETDEVICES (uint8_t)0x0B
#define PROTEUSIII_CMD_GETDEVICES_REQ \
    (PROTEUSIII_CMD_GETDEVICES | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GETDEVICES_CNF \
    (PROTEUSIII_CMD_GETDEVICES | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_SETBEACON (uint8_t)0x0C
#define PROTEUSIII_CMD_SETBEACON_REQ \
    (PROTEUSIII_CMD_SETBEACON | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_SETBEACON_CNF \
    (PROTEUSIII_CMD_SETBEACON | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_BEACON_IND \
    (PROTEUSIII_CMD_SETBEACON | PROTEUSIII_CMD_TYPE_IND)
#define PROTEUSIII_CMD_BEACON_RSP \
    (PROTEUSIII_CMD_SETBEACON | PROTEUSIII_CMD_TYPE_RSP)
#define PROTEUSIII_CMD_RSSI_IND (uint8_t)0x8B

#define PROTEUSIII_CMD_PASSKEY (uint8_t)0x0D
#define PROTEUSIII_CMD_PASSKEY_REQ \
    (PROTEUSIII_CMD_PASSKEY | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_PASSKEY_CNF \
    (PROTEUSIII_CMD_PASSKEY | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_PASSKEY_IND \
    (PROTEUSIII_CMD_PASSKEY | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_GET (uint8_t)0x10
#define PROTEUSIII_CMD_GET_REQ (PROTEUSIII_CMD_GET | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GET_CNF (PROTEUSIII_CMD_GET | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_SET (uint8_t)0x11
#define PROTEUSIII_CMD_SET_REQ (PROTEUSIII_CMD_SET | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_SET_CNF (PROTEUSIII_CMD_SET | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_PHYUPDATE (uint8_t)0x1A
#define PROTEUSIII_CMD_PHYUPDATE_REQ \
    (PROTEUSIII_CMD_PHYUPDATE | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_PHYUPDATE_CNF \
    (PROTEUSIII_CMD_PHYUPDATE | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_PHYUPDATE_IND \
    (PROTEUSIII_CMD_PHYUPDATE | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_FACTORYRESET (uint8_t)0x1C
#define PROTEUSIII_CMD_FACTORYRESET_REQ \
    (PROTEUSIII_CMD_FACTORYRESET | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_FACTORYRESET_CNF \
    (PROTEUSIII_CMD_FACTORYRESET | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_NUMERIC_COMP (uint8_t)0x24
#define PROTEUSIII_CMD_NUMERIC_COMP_REQ \
    (PROTEUSIII_CMD_NUMERIC_COMP | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_NUMERIC_COMP_CNF \
    (PROTEUSIII_CMD_NUMERIC_COMP | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_DISPLAY_PASSKEY_IND \
    (PROTEUSIII_CMD_NUMERIC_COMP | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_GPIO_LOCAL_WRITECONFIG (uint8_t)0x25
#define PROTEUSIII_CMD_GPIO_LOCAL_WRITECONFIG_REQ \
    (PROTEUSIII_CMD_GPIO_LOCAL_WRITECONFIG | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_LOCAL_WRITECONFIG_CNF \
    (PROTEUSIII_CMD_GPIO_LOCAL_WRITECONFIG | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_GPIO_LOCAL_READCONFIG (uint8_t)0x2B
#define PROTEUSIII_CMD_GPIO_LOCAL_READCONFIG_REQ \
    (PROTEUSIII_CMD_GPIO_LOCAL_READCONFIG | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_LOCAL_READCONFIG_CNF \
    (PROTEUSIII_CMD_GPIO_LOCAL_READCONFIG | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_GPIO_LOCAL_WRITE (uint8_t)0x26
#define PROTEUSIII_CMD_GPIO_LOCAL_WRITE_REQ \
    (PROTEUSIII_CMD_GPIO_LOCAL_WRITE | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_LOCAL_WRITE_CNF \
    (PROTEUSIII_CMD_GPIO_LOCAL_WRITE | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_GPIO_LOCAL_WRITE_IND \
    (PROTEUSIII_CMD_GPIO_LOCAL_WRITE | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_GPIO_LOCAL_READ (uint8_t)0x27
#define PROTEUSIII_CMD_GPIO_LOCAL_READ_REQ \
    (PROTEUSIII_CMD_GPIO_LOCAL_READ | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_LOCAL_READ_CNF \
    (PROTEUSIII_CMD_GPIO_LOCAL_READ | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_GPIO_REMOTE_WRITECONFIG (uint8_t)0x28
#define PROTEUSIII_CMD_GPIO_REMOTE_WRITECONFIG_REQ \
    (PROTEUSIII_CMD_GPIO_REMOTE_WRITECONFIG | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_REMOTE_WRITECONFIG_CNF \
    (PROTEUSIII_CMD_GPIO_REMOTE_WRITECONFIG | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_GPIO_REMOTE_WRITECONFIG_IND \
    (PROTEUSIII_CMD_GPIO_REMOTE_WRITECONFIG | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_GPIO_REMOTE_READCONFIG (uint8_t)0x2C
#define PROTEUSIII_CMD_GPIO_REMOTE_READCONFIG_REQ \
    (PROTEUSIII_CMD_GPIO_REMOTE_READCONFIG | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_REMOTE_READCONFIG_CNF \
    (PROTEUSIII_CMD_GPIO_REMOTE_READCONFIG | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_GPIO_REMOTE_WRITE (uint8_t)0x29
#define PROTEUSIII_CMD_GPIO_REMOTE_WRITE_REQ \
    (PROTEUSIII_CMD_GPIO_REMOTE_WRITE | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_REMOTE_WRITE_CNF \
    (PROTEUSIII_CMD_GPIO_REMOTE_WRITE | PROTEUSIII_CMD_TYPE_CNF)
#define PROTEUSIII_CMD_GPIO_REMOTE_WRITE_IND \
    (PROTEUSIII_CMD_GPIO_REMOTE_WRITE | PROTEUSIII_CMD_TYPE_IND)

#define PROTEUSIII_CMD_GPIO_REMOTE_READ (uint8_t)0x2A
#define PROTEUSIII_CMD_GPIO_REMOTE_READ_REQ \
    (PROTEUSIII_CMD_GPIO_REMOTE_READ | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GPIO_REMOTE_READ_CNF \
    (PROTEUSIII_CMD_GPIO_REMOTE_READ | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_GET_BONDS (uint8_t)0x0F
#define PROTEUSIII_CMD_GET_BONDS_REQ \
    (PROTEUSIII_CMD_GET_BONDS | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_GET_BONDS_CNF \
    (PROTEUSIII_CMD_GET_BONDS | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_DELETE_BONDS (uint8_t)0x0E
#define PROTEUSIII_CMD_DELETE_BONDS_REQ \
    (PROTEUSIII_CMD_DELETE_BONDS | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_DELETE_BONDS_CNF \
    (PROTEUSIII_CMD_DELETE_BONDS | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_ALLOWUNBONDEDCONNECTIONS (uint8_t)0x2D
#define PROTEUSIII_CMD_ALLOWUNBONDEDCONNECTIONS_REQ \
    (PROTEUSIII_CMD_ALLOWUNBONDEDCONNECTIONS | PROTEUSIII_CMD_TYPE_REQ)
#define PROTEUSIII_CMD_ALLOWUNBONDEDCONNECTIONS_CNF \
    (PROTEUSIII_CMD_ALLOWUNBONDEDCONNECTIONS | PROTEUSIII_CMD_TYPE_CNF)

#define PROTEUSIII_CMD_ERROR_IND (uint8_t)0xA2

/**
 * @brief Type used to check the response, when a command was sent to the
 * ProteusIII
 */
typedef enum ProteusIII_CMD_Status_t {
    CMD_Status_Success = (uint8_t)0x00,
    CMD_Status_Failed = (uint8_t)0x01,
    CMD_Status_Invalid,
    CMD_Status_Reset,
    CMD_Status_NoStatus,
} ProteusIII_CMD_Status_t;

typedef enum ProteusIII_UserSettings_t {
    ProteusIII_USERSETTING_INDEX_DEVICE_NAME = (uint8_t)0x02,
    ProteusIII_USERSETTING_INDEX_FWVersion = (uint8_t)0x01,
    ProteusIII_USERSETTING_INDEX_BT_MAC_ADDRESS = (uint8_t)0x04,
    ProteusIII_USERSETTING_INDEX_CONNECTION_TIMING = (uint8_t)0x08,
    ProteusIII_USERSETTING_INDEX_CFG_FLAGS = (uint8_t)0x1C,
    ProteusIII_USERSETTING_INDEX_RF_AdvertisingFlags = (uint8_t)0x1D
} ProteusIII_UserSettings_t;

/**
 * @brief Command confirmation.
 */
typedef struct {
    uint8_t cmd; /**< Variable to check if correct CMD has been confirmed */
    ProteusIII_CMD_Status_t
        status; /**< Variable used to check the response (*_CNF), when a request
                   (*_REQ) was sent to the ProteusIII */
} ProteusIII_CMD_Confirmation_t;

typedef struct {
    void (*datareceived)(uint8_t *data, int length);
    void (*connected)();
    void (*disconnected)();
    void (*channelopen)();
} PROTEUSIII_cb;

typedef struct {
    TypeSerial *serialDebug;
    TypeHardwareSerial *serialProteusIII;
    char usersettingsbuffer[100];
    int usersettingsbufferdatalength;
    bool channelopen;
    int status;
} PROTEUSIII;

PROTEUSIII *PROTEUSIII_Create(TypeSerial *serialDebug,
                              TypeHardwareSerial *serialProteusIII,
                              PROTEUSIII_cb *callbacks);
bool PROTEUSIII_Transmit(PROTEUSIII *self, uint8_t *payloadP, uint16_t length);

bool PROTEUSIII_Receive(PROTEUSIII *self);

bool PROTEUSIII_GetConnectionTiming(PROTEUSIII *self, uint8_t *value);

bool PROTEUSIII_SetConnectionTiming(PROTEUSIII *self, uint8_t value);

bool PROTEUSIII_GetDeviceName(PROTEUSIII *self, uint8_t *value);

bool PROTEUSIII_SetDeviceName(PROTEUSIII *self, uint8_t *value);

bool PROTEUSIII_SetBeaconData(PROTEUSIII *self, uint8_t *value, int length);

bool PROTEUSIII_GetBTMacAddress(PROTEUSIII *self, uint8_t *value);

bool PROTEUSIII_SetAdvertisingFlags(PROTEUSIII *self, uint8_t value);

bool PROTEUSIII_GetFWVersion(PROTEUSIII *self, uint8_t *value);

bool PROTEUSIII_GetCFGFlags(PROTEUSIII *self, uint8_t *value);

bool PROTEUSIII_SetCFGFlags(PROTEUSIII *self, uint8_t *value);

#ifdef __cplusplus
}
#endif

#endif /*  PROTEUSIIIBOARD_H */